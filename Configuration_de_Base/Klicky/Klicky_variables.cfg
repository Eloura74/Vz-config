# # This macro was provided by discord user Garrettwp to whom i give my thanks for sharing it with me.
# # I have tweaked it a lot.
# # They are based on the great Annex magprobe dockable probe macros "#Originally developed by Mental,
# # modified for better use on K-series printers by RyanG and Trails", kudos to them.
# # That macro as since evolved into a klipper plugin that currently is pending inclusion in klipper,
# # more information here, https://github.com/Annex-Engineering/Quickdraw_Probe/tree/main/Klipper_Macros
# # User richardjm revised the macro variables and added some functions, thanks a lot
# # by standing on the shoulders of giants, lets see if we can see further
# #
# # the current home for this version is https://github.com/jlas1/Klicky-Probe
# # the 1000 values below is to give an error instead of doing something wrong, hopefully, this won't be used is a printer larger than 1 meter

# [gcode_macro _User_Variables]
# variable_verbose:             True    # Activer la sortie détaillée
# variable_debug:              False    # Activer la sortie de débogage
# variable_travel_speed:         200    # Vitesse de déplacement pour les mouvements de déplacement
# variable_move_accel:           200    # Accélération lors des déplacements
# variable_dock_speed:            50    # Vitesse de déplacement lors de l'amarrage de la sonde pour le mouvement final
# variable_release_speed:        100    # Vitesse de déplacement pour libérer les aimants après l'amarrage
# variable_z_drop_speed:          20    # Vitesse de descente de l'axe Z lors du déplacement vers la position Z pour éviter la sonde

# variable_safe_z:         	    55    # Z minimum pour les fonctions d'attachement, d'amarrage et de retour à la position d'origine
# # Si vrai, déplacer le lit loin de la buse lorsque Z n'est pas à la position d'origine
# variable_enable_z_hop:        True    # Mettez ceci à faux pour les lits qui tombent sous l'effet de la gravité (presque jusqu'au maximum de Z)

# variable_max_bed_y:            330    # Taille maximale du lit pour éviter d'effectuer une précision de sondage en dehors du lit
# variable_max_bed_x:            330    # Taille maximale du lit pour éviter d'effectuer une précision de sondage en dehors du lit

# # Si un commutateur Z de fin de course séparé est utilisé,
# # spécifiez les coordonnées du commutateur ici (Voron).
# # Mettez à 0 pour que la sonde se déplace vers le centre du lit
# variable_z_endstop_x:         0 
# variable_z_endstop_y:         0 

# # Consultez la documentation spécifique à l'imprimante sur la configuration Dock/Undock de Klipper, ces valeurs sont fictives
# # Position de l'amarrage
# variable_docklocation_x:      10      # Position X de l'amarrage
# variable_docklocation_y:      308     # Position Y de l'amarrage
# variable_docklocation_z:      -128    # Position Z de l'amarrage (-128 pour un montage sur un portique/cadre)

# # Les variables suivantes sont utilisées si l'amarrage est déployé et rétracté via un servomoteur
# variable_enable_dock_servo:  True     # Mettez à True si votre système d'amarrage klicky est contrôlé par un servomoteur
# variable_servo_name:         'servo_klicky'    # Nom du servomoteur d'amarrage défini dans printer.cfg sous [servo]
# variable_servo_deploy:          20    # Cette VALEUR est la valeur utilisée pour déployer complètement le servomoteur
# variable_servo_retract:         00    # Cette VALEUR est la valeur utilisée pour rétracter complètement le servomoteur (initial_angle dans la configuration [servo])
# variable_servo_delay:          250    # C'est un délai pour attendre que le servomoteur atteigne la position demandée, soyez prudent avec les valeurs


# # Mouvement d'amarrage, mouvement final de la tête d'outil pour libérer la sonde sur l'amarrage
# # c'est un déplacement relatif
# Variable_dockmove_x:            50
# Variable_dockmove_y:             0
# Variable_dockmove_z:             0

# # Mouvement d'attachement, mouvement final de la tête d'outil pour fixer la sonde sur le support
# # c'est un déplacement relatif
# Variable_attachmove_x:           0
# Variable_attachmove_y:          50
# Variable_attachmove_z:           0

# # Ombilic pour aider à démêler l'ombilic dans des situations difficiles
# variable_umbilical:          False    # devons-nous démêler l'ombilic
# variable_umbilical_x:           15    # Position X de l'ombilic
# variable_umbilical_y:           15    # Position Y de l'ombilic

# # Emplacement pour ranger la tête d'outil
# variable_park_toolhead:      False    # Activer le rangement de la tête d'outil
# variable_parkposition_x:       125
# variable_parkposition_y:       125
# variable_parkposition_z:        30    # -128 exclut Z - Rangement uniquement sur les axes X-Y

# variable_version:                1    # Aide les utilisateurs à mettre à jour les variables nécessaires, ne pas mettre à jour si les variables ci-dessus ne sont pas mises à jour

# # Ci-dessous cette remarque, vous n'avez normalement pas besoin de configurer
# # Mouvement d'attachement 2
# Variable_attachmove2_x:          0    # Mouvement intermédiaire de la tête d'outil pour attacher
# Variable_attachmove2_y:          0    # la sonde sur l'amarrage
# Variable_attachmove2_z:          0    # (peut être négatif)

# variable_home_backoff_x:        10    # Combien de mm se déplacer à l'écart de la fin de course X après l'homologation de X
#                                       # cela est utile pour le Voron v0 pour permettre à la tête d'outil de se dégager pour permettre une homologation Y sans restriction
# variable_home_backoff_y:        10    # Combien de mm se déplacer à l'écart de la fin de course Y après l'homologation de Y

# variable_override_homing:       ''    # Configure quel axe homologuer en premier
#                                       #  '' = comportement par défaut de Klicky (essaie d'éviter de heurter l'amarrage)
#                                       # 'X' = force l'homologation de X en premier
#                                       # 'Y' = force l'homologation de Y en premier
                                      
# variable_dock_on_zhome:       True    # amarre la sonde lors de l'homologation de Z si ce n'est pas nécessaire (évite de heurter le lit sur certaines imprimantes)

# variable_bypass_probe_docking:False


# # Ne modifiez pas ci-dessous
# gcode:
#     {% set Mx = printer['configfile'].config["stepper_x"]["position_max"]|float %}
#     {% set My = printer['configfile'].config["stepper_y"]["position_max"]|float %}
#     {% set Ox = printer['configfile'].config["probe"]["x_offset"]|float %}
#     {% set Oy = printer['configfile'].config["probe"]["y_offset"]|float %}
#     {% set Oz = printer['configfile'].config["probe"]["z_offset"]|float %}

#     # Si les coordonnées x, y sont définies pour la fin de course z, les assigner
#     {% if z_endstop_x != 0 or z_endstop_y != 0 %}
#         SET_GCODE_VARIABLE MACRO=_Probe_Variables VARIABLE=z_endstop_x VALUE={ z_endstop_x }
#         SET_GCODE_VARIABLE MACRO=_Probe_Variables VARIABLE=z_endstop_y VALUE={ z_endstop_y }

#     # Si aucune coordonnée x, y pour la fin de course z, supposer que la sonde est la fin de course et déplacer la tête d'outil au centre du lit
#     {% else %}
#         SET_GCODE_VARIABLE MACRO=_Probe_Variables VARIABLE=z_endstop_x VALUE={ (Mx * 0.5) - Ox }
#         SET_GCODE_VARIABLE MACRO=_Probe_Variables VARIABLE=z_endstop_y VALUE={ (My * 0.5) - Oy }
#     {% endif %}
